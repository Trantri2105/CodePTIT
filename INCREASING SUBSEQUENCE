#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<long long> vl;
typedef vector<double> vdb;
#define ftb(i, a, b) for (int i = a, _b = b; i <= _b; i++)
#define ft(i, a, b) for (int i = a, _b = b; i < _b; i++)
#define fgb(i, a, b) for (int i = a, _b = b; i >= _b; i--)
#define fg(i, a, b) for (int i = a, _b = b; i > _b; i--)
using namespace std;
int k = 0;
bool cmp(int a, int b){
    return a<b;
}
void Subsequences(int arr[], string ans[], int index, vector<int> subarr, int n)
{
    if (index == n)
    {
        if(subarr.size()>1){
            if(!is_sorted(subarr.begin(),subarr.end(),cmp)) return;
            string z=to_string(subarr[0]);
            ans[k]+=z;
            ft(i,1,subarr.size()){
                z=" ";
                ans[k]+=z;
                z=to_string(subarr[i]);
                ans[k]+=z;
            }
            k++;
        }
        return;
    }
    else
    {
        Subsequences(arr, ans, index + 1, subarr, n);
        subarr.push_back(arr[index]);
        Subsequences(arr, ans, index + 1, subarr, n);
    }
}
int main()
{
    freopen("SEQUENCE.in", "r", stdin);
    int n;
    cin >> n;
    int a[n];
    ft(i, 0, n)
    {
        cin >> a[i];
    }
    string ans[100000];
    vi sub;
    Subsequences(a,ans,0,sub,n);
    sort(ans,ans+k);
    ft(i,0,k){
        cout<<ans[i]<<"\n";
    }
    return 0;
}
